{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport TrelloList from './TrelloList';\nimport { connect } from 'react-redux';\nimport TrelloActionButton from './TrelloActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sort } from '../actions';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId,\n        type\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      this.props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type));\n    };\n  }\n\n  render() {\n    const {\n      lists\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Trello\"), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"all=list\",\n      direction: \"horizontal\",\n      type: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, provider => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provider.droppableProps, {\n      ref: provider.innerRef,\n      className: \"BoardsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }), lists.map((list, index) => /*#__PURE__*/React.createElement(TrelloList, {\n      listID: list.id,\n      key: list.id,\n      title: list.title,\n      cards: list.cards,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })), provider.placeholder, /*#__PURE__*/React.createElement(TrelloActionButton, {\n      list: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"\\xA9AnujBagerwal\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/App.js"],"names":["React","Component","TrelloList","connect","TrelloActionButton","DragDropContext","Droppable","sort","App","onDragEnd","result","destination","source","draggableId","type","props","dispatch","droppableId","index","render","lists","provider","droppableProps","innerRef","map","list","id","title","cards","placeholder","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,SAASC,IAAT,QAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAE1BQ,SAF0B,GAEbC,MAAD,IAAY;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA,WAAvB;AAAoCC,QAAAA;AAApC,UAA6CJ,MAAnD;;AAEA,UAAI,CAACC,WAAL,EAAkB;AAChB;AACD;;AAED,WAAKI,KAAL,CAAWC,QAAX,CACET,IAAI,CACFK,MAAM,CAACK,WADL,EAEFN,WAAW,CAACM,WAFV,EAGFL,MAAM,CAACM,KAHL,EAIFP,WAAW,CAACO,KAJV,EAKFL,WALE,EAMFC,IANE,CADN;AAUD,KAnByB;AAAA;;AAqB1BK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,wBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKN,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGY,QAAQ,iBACP,6CACMA,QAAQ,CAACC,cADf;AAEE,MAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIGH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOP,KAAP,kBACT,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEO,IAAI,CAACC,EADf;AAEE,MAAA,GAAG,EAAED,IAAI,CAACC,EAFZ;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,MAAA,KAAK,EAAEV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,EAaGG,QAAQ,CAACQ,WAbZ,eAcE,oBAAC,kBAAD;AAAoB,MAAA,IAAI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CANJ,CAFF,CADF,eA4BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5BF,CADF;AAiCD;;AAxDyB;;AA2D5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,KAAK,EAAEW,KAAK,CAACX;AADR,GAAP;AAGD,CAJD;;AAKA,eAAejB,OAAO,CAAC2B,eAAD,CAAP,CAAyBtB,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css'\nimport TrelloList from './TrelloList';\nimport { connect } from 'react-redux'\nimport TrelloActionButton from './TrelloActionButton'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { sort } from '../actions'\n\nclass App extends Component {\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  }\n\n  render() {\n    const { lists } = this.props\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <div className=\"title\">Trello</div>\n          <Droppable\n            droppableId=\"all=list\"\n            direction=\"horizontal\"\n            type=\"list\"\n          >\n            {provider => (\n              <div\n                {...provider.droppableProps}\n                ref={provider.innerRef}\n                className=\"BoardsContainer\">\n                {lists.map((list, index) => (\n                  <TrelloList\n                    listID={list.id}\n                    key={list.id}\n                    title={list.title}\n                    cards={list.cards}\n                    index={index}\n                  />\n                ))}\n                {provider.placeholder}\n                <TrelloActionButton list />\n              </div>\n            )}\n          </Droppable>\n        </div>\n        <div className=\"title footer\">Â©AnujBagerwal</div>\n      </DragDropContext >\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists\n  }\n}\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}