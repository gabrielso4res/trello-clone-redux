{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/TrelloActionButton.js\";\nimport React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Card from '@material-ui/core/Card';\nimport TextArea from 'react-textarea-autosize';\nimport { Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\nimport { addList, addCard } from '../actions';\nexport class TrelloActionButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formOpen: false,\n      text: \"\"\n    };\n\n    this.openForm = () => {\n      this.setState({\n        formOpen: true\n      });\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        formOpen: false\n      });\n    };\n\n    this.handleInputChange = e => {\n      this.setState({ ...this.state,\n        text: e.target.value\n      });\n    };\n\n    this.handleAddList = () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        dispatch(addList(text));\n        this.setState({\n          text: \"\"\n        });\n      }\n    };\n\n    this.handleAddCard = () => {\n      const {\n        dispatch,\n        listID\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        dispatch(addCard(listID, text));\n        this.setState({\n          text: \"\"\n        });\n      }\n    };\n\n    this.renderAddButton = () => {\n      const {\n        list\n      } = this.props;\n      const buttonText = list ? \"Add another list\" : \"Add another card\";\n      const buttonTextOpacity = list ? 1 : 0.5;\n      const buttonTextColor = list ? \"white\" : \"inherit\";\n      const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"openForButtonGroup\",\n        onClick: this.openForm,\n        style: {\n          opacity: buttonTextOpacity,\n          color: buttonTextColor,\n          backgroundColor: buttonTextBackground\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"add\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, buttonText));\n    };\n\n    this.rederForm = () => {\n      const {\n        list\n      } = this.props;\n      const placeholder = list ? \"Enter List Title\" : \"Enter Title for Card\";\n      const buttonTitle = list ? \"Add List\" : \"Add Card\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          minHeight: 80,\n          minWidth: 272,\n          padding: \"6px 8px 2px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextArea, {\n        className: \"cardTextArea\",\n        placeholder: placeholder,\n        value: this.state.text,\n        onChange: this.handleInputChange,\n        onBlur: this.closeForm,\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formButtonGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onMouseDown: list ? this.handleAddList : this.handleAddCard,\n        variant: \"contained\",\n        style: {\n          color: \"white\",\n          backgroundColor: \"#5aac44\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, buttonTitle), /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          marginLeft: 8,\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"Close\")));\n    };\n  }\n\n  render() {\n    return this.state.formOpen ? this.rederForm() : this.renderAddButton();\n  }\n\n}\nexport default connect()(TrelloActionButton);","map":{"version":3,"sources":["/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/TrelloActionButton.js"],"names":["React","Component","AddIcon","Card","TextArea","Button","CloseIcon","connect","addList","addCard","TrelloActionButton","state","formOpen","text","openForm","setState","closeForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","listID","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","opacity","color","backgroundColor","rederForm","placeholder","buttonTitle","minHeight","minWidth","padding","marginLeft","cursor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AddIcon from '@material-ui/icons/Add';\nimport Card from '@material-ui/core/Card';\nimport TextArea from 'react-textarea-autosize'\nimport { Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux'\nimport { addList, addCard } from '../actions'\n\nexport class TrelloActionButton extends Component {\n    state = {\n        formOpen: false,\n        text: \"\"\n    }\n\n    openForm = () => {\n        this.setState({\n            formOpen: true\n        })\n    }\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        })\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            ...this.state,\n            text: e.target.value\n        })\n    }\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            dispatch(addList(text))\n            this.setState({ text: \"\" })\n        }\n    }\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            dispatch(addCard(listID, text))\n            this.setState({ text: \"\" })\n        }\n    }\n\n    renderAddButton = () => {\n        const { list } = this.props;\n\n        const buttonText = list ? \"Add another list\" : \"Add another card\"\n        const buttonTextOpacity = list ? 1 : 0.5;\n        const buttonTextColor = list ? \"white\" : \"inherit\"\n        const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n        return (\n            <div className=\"openForButtonGroup\"\n                onClick={this.openForm}\n                style={{\n                    opacity: buttonTextOpacity,\n                    color: buttonTextColor,\n                    backgroundColor: buttonTextBackground\n                }}>\n                <AddIcon>add</AddIcon>\n                <p>{buttonText}</p>\n            </div>\n        )\n    }\n\n    rederForm = () => {\n\n        const { list } = this.props;\n\n        const placeholder = list ? \"Enter List Title\" : \"Enter Title for Card\";\n\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n        return (\n            <div>\n                <Card\n                    style={{\n                        minHeight: 80,\n                        minWidth: 272,\n                        padding: \"6px 8px 2px\"\n                    }}>\n                    <TextArea\n                        className=\"cardTextArea\"\n                        placeholder={placeholder}\n                        value={this.state.text}\n                        onChange={this.handleInputChange}\n                        onBlur={this.closeForm}\n                        autoFocus\n                    />\n                </Card>\n                <div className=\"formButtonGroup\">\n                    <Button\n                        onMouseDown={list ? this.handleAddList : this.handleAddCard}\n                        variant=\"contained\"\n                        style={{\n                            color: \"white\",\n                            backgroundColor: \"#5aac44\"\n                        }}>\n                        {buttonTitle}\n                    </Button>\n                    <CloseIcon\n                        style={{\n                            marginLeft: 8,\n                            cursor: \"pointer\"\n                        }}>Close</CloseIcon>\n\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return this.state.formOpen ? this.rederForm() : this.renderAddButton()\n    }\n}\n\nexport default connect()(TrelloActionButton);\n"]},"metadata":{},"sourceType":"module"}