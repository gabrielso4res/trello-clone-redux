{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/TrelloActionButton.js\";\nimport React, { Component } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport { darken } from \"polished\";\nexport class TrelloActionButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formOpen: false,\n      text: \"\"\n    };\n\n    this.openForm = () => {\n      this.setState({\n        formOpen: true\n      });\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        formOpen: false\n      });\n    };\n\n    this.handleInputChange = e => {\n      this.setState({ ...this.state,\n        text: e.target.value\n      });\n    };\n\n    this.handleAddList = () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        dispatch(addList(text));\n        this.setState({\n          text: \"\"\n        });\n      }\n    };\n\n    this.handleAddCard = () => {\n      const {\n        dispatch,\n        listID\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        dispatch(addCard(listID, text));\n        this.setState({\n          text: \"\"\n        });\n      }\n    };\n\n    this.renderAddButton = () => {\n      const {\n        list\n      } = this.props;\n      const buttonText = list ? \"Adicionar nova lista\" : \"Adicionar novo card\";\n      const buttonTextOpacity = list ? 1 : 1;\n      const buttonTextColor = list ? \"black\" : \"black\";\n      const buttonTextBackground = list ? `${darken(0.3, \"#7159c1\")}` : \"inherit\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"openForButtonGroup\",\n        onClick: this.openForm,\n        style: {\n          opacity: buttonTextOpacity,\n          color: buttonTextColor,\n          backgroundColor: buttonTextBackground\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, \"add\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, buttonText));\n    };\n\n    this.rederForm = () => {\n      const {\n        list\n      } = this.props;\n      const placeholder = list ? \"Enter List Title\" : \"Enter Title for Card\";\n      const buttonTitle = list ? \"Add List\" : \"Add Card\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          minHeight: 80,\n          minWidth: 272,\n          padding: \"6px 8px 2px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextArea, {\n        className: \"cardTextArea\",\n        placeholder: placeholder,\n        value: this.state.text,\n        onChange: this.handleInputChange,\n        onBlur: this.closeForm,\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formButtonGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onMouseDown: list ? this.handleAddList : this.handleAddCard,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, buttonTitle), /*#__PURE__*/React.createElement(CloseIcon, {\n        style: {\n          marginLeft: 8,\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Close\")));\n    };\n  }\n\n  render() {\n    return this.state.formOpen ? this.rederForm() : this.renderAddButton();\n  }\n\n}\nexport default connect()(TrelloActionButton);","map":{"version":3,"sources":["/home/gabriel/Downloads/Trello-react-redux-react-dnd-master/src/components/TrelloActionButton.js"],"names":["React","Component","AddIcon","Card","TextArea","Button","CloseIcon","connect","addList","addCard","darken","TrelloActionButton","state","formOpen","text","openForm","setState","closeForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","listID","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","opacity","color","backgroundColor","rederForm","placeholder","buttonTitle","minHeight","minWidth","padding","marginLeft","cursor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport { darken } from \"polished\";\n\nexport class TrelloActionButton extends Component {\n  state = {\n    formOpen: false,\n    text: \"\",\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true,\n    });\n  };\n\n  closeForm = () => {\n    this.setState({\n      formOpen: false,\n    });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      ...this.state,\n      text: e.target.value,\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      dispatch(addList(text));\n      this.setState({ text: \"\" });\n    }\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      dispatch(addCard(listID, text));\n      this.setState({ text: \"\" });\n    }\n  };\n\n  renderAddButton = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Adicionar nova lista\" : \"Adicionar novo card\";\n    const buttonTextOpacity = list ? 1 : 1;\n    const buttonTextColor = list ? \"black\" : \"black\";\n    const buttonTextBackground = list ? `${darken(0.3, \"#7159c1\")}` : \"inherit\";\n\n    return (\n      <div\n        className=\"openForButtonGroup\"\n        onClick={this.openForm}\n        style={{\n          opacity: buttonTextOpacity,\n          color: buttonTextColor,\n          backgroundColor: buttonTextBackground,\n        }}\n      >\n        <AddIcon>add</AddIcon>\n        <p>{buttonText}</p>\n      </div>\n    );\n  };\n\n  rederForm = () => {\n    const { list } = this.props;\n\n    const placeholder = list ? \"Enter List Title\" : \"Enter Title for Card\";\n\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n    return (\n      <div>\n        <Card\n          style={{\n            minHeight: 80,\n            minWidth: 272,\n            padding: \"6px 8px 2px\",\n          }}\n        >\n          <TextArea\n            className=\"cardTextArea\"\n            placeholder={placeholder}\n            value={this.state.text}\n            onChange={this.handleInputChange}\n            onBlur={this.closeForm}\n            autoFocus\n          />\n        </Card>\n        <div className=\"formButtonGroup\">\n          <Button\n            onMouseDown={list ? this.handleAddList : this.handleAddCard}\n            variant=\"contained\"\n          >\n            {buttonTitle}\n          </Button>\n          <CloseIcon\n            style={{\n              marginLeft: 8,\n              cursor: \"pointer\",\n            }}\n          >\n            Close\n          </CloseIcon>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.formOpen ? this.rederForm() : this.renderAddButton();\n  }\n}\n\nexport default connect()(TrelloActionButton);\n"]},"metadata":{},"sourceType":"module"}